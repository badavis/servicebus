language: node_js

env:
  # You may want to update this to whatever the latest version is, or keep it
  # the same as your local machines. However, I have only tested it with 1.8.0+.
  # There should be a time in the future when this is not necessary - it is
  # explained in more detail below.
  DOCKER_COMPOSE_VERSION: 1.18.0

cache:
  directories:
    - ~/.npm

notifications:
  email: false
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/f2153139b5c691e5a554
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: never     # options: [always|never|change] default: always

node_js:
  - '11'
  - '10'
  - '9'
  - '8'
  - '6'

before_install:
  # update is required to update the repositories to see the new packages for
  # Docker.
  - sudo apt-get update

  # Now we can install the newer docker-ce which is required for the newer
  # docker-composer we will install next. The messy options are to force it to
  # be non-interactive (normally it asks you a bunch of config questions).
  - sudo apt-get install -o Dpkg::Options::="--force-confold" --force-yes -y docker-ce

  # As of the writing of this script Travis has docker-compose v1.4.2, we need
  # to update it to 1.8+. $DOCKER_COMPOSE_VERSION is provide from the `env`
  # above.
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin

  # Check that docker-compose is now running the latest version (or at least the
  # one we specified). This is not to be confused with the version we printed
  # before doing the update.
  - docker-compose --version

  # You will want this for logging. If one of your containers does not build for
  # whatever reason it's best to report that now before your tests start
  # otherwise it can be really tricky to debug why tests are failing sometimes.
  - docker ps
  - npm i -g npm@latest

install:
  - npm install

before_script:
  # - npm run lint
  - npm prune

script:
  - npm t
  - make docker-test

after_success:
  - npm run travis-deploy-once "npm run semantic-release"

branches:
  except:
    - /^v\d+\.\d+\.\d+$/
